"ControlVariable2"=c("1","2","1","2","1","2","1","2","1","2","1","2"),
"Outcome"=c(124,136,157,96,93,103,146,128,111,106,149,132)
)
write.table(df, file='C:\\Users\\ddinh\\OneDrive\\Documents\\EXST 7004\\data.txt')
df
model.2.1 <- aov(Outcome ~ControlVariable1 + ControlVariable2)
model.2.1 <- aov(outcome ~ControlVariable1 + ControlVariable2)
df<- data.frame(ControlVariable1=c("1","1","2","2","1","1","2","2","1","1","2","2"),
ControlVariable2=c("1","2","1","2","1","2","1","2","1","2","1","2"),
Outcome=c(124,136,157,96,93,103,146,128,111,106,149,132)
)
write.table(df, file='C:\\Users\\ddinh\\OneDrive\\Documents\\EXST 7004\\data.txt')
df
model.2.1 <- aov(Outcome ~ControlVariable1 + ControlVariable2)
model.2.1 <- aov(Outcome~ControlVariable1 + ControlVariable2)
library(easypackages)
libraries("mlbench","randomForest","tictoc")
install.packages("mlbench")
install.packages("randomForest")
install.packages("tictoc")
library(easypackages)
libraries("mlbench","randomForest","tictoc")
########## Boston Housing Example ##########
data(BostonHousing)
View(BostonHousing)
View(BostonHousing)
summary(BostonHousing)
set.seed(42) #set random seed reproducible -- so everyone has the same results
indx <- sample(1:506,size=506,replace=F) #scrambles the 506 data rows
bh.train <- BostonHousing[indx[1:400],] #80% train
bh.test <- BostonHousing[indx[401:506],] #20% test
set.seed(1) #set random seed to make the results reproducible
tic()
fit1 <- randomForest(medv~.,data=bh.train, xtest=bh.test[,-14], ytest=bh.test$medv,keep.forest=TRUE) # exclude column 14 bc it is the y-variable
fit1
toc()
pred.train <- predict(fit1,bh.train)
mean((pred.train-bh.train$medv)^2) #MSE using all trees
1-sum((pred.train-bh.train$medv)^2)/(399*var(bh.train$medv))
pred.test <- predict(fit1,bh.test)
accuracy=mean((pred.test-bh.test$medv)^2)
plot(fit1, main="MSE on OOB samples")
tic()
fit2 <- randomForest(medv~.,data=bh.train, xtest=bh.test[,-14], ytest=bh.test$medv,mtry=13) #this uses ALL 13 variables
fit2
toc()
importance(fit1)
varImpPlot(fit1, sort=TRUE)
par(mfrow=c(1,2))
partialPlot(fit1, bh.train, 'lstat')
partialPlot(fit1, bh.train, 'rm')
pred.test <- predict(fit1,bh.test,predict.all=T)
FUN <- function(x){
mean((x-bh.test$medv)^2)
}
par(mfrow=c(1,1))
hist(apply(pred.test$ind,2,FUN),xlim=c(0,100),xlab="MSE on test set",
main="Histogram of MSE on individual trees from RF")
abline(v=8.4,col="red")
lm.fit <- lm(medv~.,data=bh.train)
lm.pred.test <- predict(lm.fit,newdata=bh.test)
mean((lm.pred.test-bh.test$medv)^2)
########## Satellite Image Example ##########
data(Satellite)
summary(Satellite)
N <- nrow(Satellite)
set.seed(1) #set random seed reproducible
indx     <- sample(1:N, size=N, replace=F)
si.train <- Satellite[indx[1:4000],]
si.test  <- Satellite[indx[4001:N],]
## RF using default settings
tic()
set.seed(1) #set random seed to make the results reproducible
fit1 <- randomForest(classes~.,data=si.train, xtest=si.test[,-37], ytest=si.test$classes,ntree=200,keep.forest=TRUE)
fit1
toc()
plot(fit1, main="Error rates on OOB samples")
legend("topright",legend=c("OOB",levels(si.train$classes)),col=1:7,lty=1:7)
varImpPlot(fit1, sort=TRUE)
df1 <- read.csv('DD_CompetitiveCareer_02_25_2023.csv', header = TRUE, sep = "")
setwd("C:/Users/ddinh/OneDrive/Documents/EXST 7087/Final Project")
df1 <- read.csv('DD_CompetitiveCareer_02_25_2023.csv', header = TRUE, sep = "")
library(readr)
df1 <- read.csv('DD_CompetitiveCareer_02_25_2023.csv', header = TRUE, sep = "")
df1 <- read.csv(C:/Users/ddinh/OneDrive/Documents/EXST 7087/Final Project/DD_CompetitiveCareer_02_25_2023.csv)
df1 <- read.csv(C:Users/ddinh/OneDrive/Documents/EXST 7087/Final Project/DD_CompetitiveCareer_02_25_2023.csv)
library(readxl)
df1 <- read.csv(C:Users/ddinh/OneDrive/Documents/EXST 7087/Final Project/DD_CompetitiveCareer_02_25_2023.csv)
df1 <- read.excel(C:Users/ddinh/OneDrive/Documents/EXST 7087/Final Project/DD_CompetitiveCareer_02_25_2023.xlsx)
df1 <- read.excel(DD_CompetitiveCareer_02_25_2023.xlsx)
library(readxl)
df1 <- read_excel(DD_CompetitiveCareer_02_25_2023.xlsx)
setwd("C:/Users/ddinh/OneDrive/Documents/EXST 7087/Final Project")
df1 <- read_excel("DD_CompetitiveCareer_02_25_2023.xlsx")
View(df1)
View(df1)
library(easypackages)
str(df1)
View(df1)
View(df1)
library(dplyr)
df2 <- select(df1, -1, -5, -10, -11)
View(df2)
View(df2)
libraries("ggplot2","MASS","aod","ResourceSelection")
library(readxl)
library(easypackages)
library(dplyr)
library(olsrr)
library(caret)
library(leaps)
library(MASS)
library(tidyverse)
library(car)
df1 <- read_excel("DD_CompetitiveCareer_02_25_2023.xlsx")
str(df1)
df2 <- select(df1, -1, -5, -10, -11)
View(df2)
View(df2)
df2 <- select(df1, -1, -5, -10, -11)
library(readxl)
library(easypackages)
library(dplyr)
library(olsrr)
library(caret)
library(leaps)
library(MASS)
library(tidyverse)
library(car)
libraries("ggplot2","MASS","aod","ResourceSelection")
df1 <- read_excel("DD_CompetitiveCareer_02_25_2023.xlsx")
str(df1)
df2 <- select(df1, -1, -5, -10, -11)
View(df1)
View(df1)
df2 <- select(df1, -1, -5, -10, -11)
df2 <- select(df1, -one_of(1, 5, 10, 11))
df2 <- select(df1, -1, -5, -10, -11)
library(dplyr)
df2 <- select(df1, -1, -5, -10, -11)
df1 <- read_excel("DD_CompetitiveCareer_02_25_2023.xlsx")
df2 <- select(df1, -1, -5, -10, -11)
df2 <- select(df1, -"Date", -"Match Score", -"K", -"D")
df2 <- select(df1, -Date, -Match Score, -K, -D)
df2 <- select(df1, -1, -5, -10, -11)
library(readxl)
library(easypackages)
library(dplyr)
library(olsrr)
library(caret)
library(leaps)
library(MASS)
library(tidyverse)
library(car)
libraries("ggplot2","MASS","aod","ResourceSelection")
df2 <- select(df1, -one_of(1, 5, 10, 11))
df2 <- select(df1, -1, -5, -10, -11)
library(readxl)
library(easypackages)
library(dplyr)
library(olsrr)
library(caret)
library(leaps)
library(MASS)
library(tidyverse)
library(car)
libraries("ggplot2","MASS","aod","ResourceSelection")
df1 <- read_excel("DD_CompetitiveCareer_02_25_2023.xlsx")
str(df1)
df2 <- select(df1, -1, -5, -10, -11)
View(df1)
df2 <- select(df1, -c(1,5,10,11))
df2 <- df1[, -c(1,5,10,11)]
View(df2)
View(df2)
df3<- df2$Results <- ifelse(df2$Results == "W", 1, ifelse(df2$Results == "L", 0, df2$Results))
df2$Results[df2$Results == "W"] <- 1
df2$Results[df2$Results == "L"] <- 0
df2
df2$Results[df2$Results == "D"] <- "NA"
df2
df3 <- na.omit(df2)
View(df3)
df2$Results[df2$Results == "D"] <- "na"
df2
df3 <- na.omit(df2)
logmodel <- glm(as.factor(Results) ~ , data = ONE, family = "binomial")
df3 <- na.omit(df2)
df3 <- df2[complete.cases(df2), ]
df2$Results[df2$Results == "D"] <- "na"
df2
df3 <- df2[complete.cases(df2), ]
df2 <- df1[, -c(1,5,10,11)]
df2$Results[df2$Results == "W"] <- 1
df2$Results[df2$Results == "L"] <- 0
df2$Results[df2$Results == "D"] <- "na"
df2
df3 <- na.omit(df2)
View(df3)
View(df3)
df3 <- na.omit(df2$Results)
df2$Results[df2$Results == "D"] <- ""
df3 <- na.omit(df2)
df1 <- read_excel("DD_CompetitiveCareer_02_25_2023.xlsx")
str(df1)
df2 <- df1[, -c(1,5,10,11)]
df2$Results[df2$Results == "W"] <- 1
df2$Results[df2$Results == "L"] <- 0
df2$Results[df2$Results == "D"] <- ""
df2
df3 <- na.omit(df2)
View(df3)
df2[df2 == ""] <- NA
df3 <- df2[complete.cases(df2), ]
View(df3)
logmodel <- glm(as.factor(Results) ~ ., data = df3, family = "binomial")
View(logmodel)
View(logmodel)
stepboth.model <- stepAIC(full_model, direction = "both",
trace = FALSE)
stepboth.model <- stepAIC(logmodel, direction = "both",
trace = FALSE)
summary(stepboth.model)
barplot(df3$Results, names.arg = df3$Agent, main = "Bar Plot", xlab = "Agent", ylab = "Results")
#barplot(df3$Results, names.arg = df3$Agent, main = "Bar Plot", xlab = "Agent", ylab = "Results")
freq_table <- table(df3$Agent, d3f$Results)
#barplot(df3$Results, names.arg = df3$Agent, main = "Bar Plot", xlab = "Agent", ylab = "Results")
freq_table <- table(df3$Agent, df3$Results)
barplot(freq_table, beside = FALSE, legend = TRUE, col = rainbow(length(unique(df3$Results))))
df2$Agent[df2$Agent == "sage"] <- "Sage"
df2$Agent[df2$Agent == "reyna"] <- "Reyna"
df2$Agent[df2$Agent == "brimstone"] <- "Brimstone"
df2
df2
df2[df2 == ""] <- NA
df3 <- df2[complete.cases(df2), ]
logmodel <- glm(as.factor(Results) ~ ., data = df3, family = "binomial")
stepboth.model <- stepAIC(logmodel, direction = "both",
trace = FALSE)
summary(stepboth.model)
#barplot(df3$Results, names.arg = df3$Agent, main = "Bar Plot", xlab = "Agent", ylab = "Results")
freq_table <- table(df3$Agent, df3$Results)
barplot(freq_table, beside = FALSE, legend = TRUE, col = rainbow(length(unique(df3$Results))))
barplot(df3$Results, names.arg = df3$Agent, main = "Bar Plot", xlab = "Agent", ylab = "Results")
str(df3)
barplot(freq_table, beside = FALSE, legend = TRUE)
my_colors <- c("red", "blue", "green", "yellow", "orange", "purple", "pink", "cyan", "magenta", "brown", "gray", "lime", "teal")
barplot(freq_table, beside = FALSE, legend = TRUE, col = my_colors)
my_colors <- c("red", "blue", "green", "yellow", "orange", "purple", "pink", "cyan", "magenta", "brown", "gray", "white", "teal")
barplot(freq_table, beside = FALSE, legend = TRUE, col = my_colors)
barplot(freq_table, beside = FALSE, legend = TRUE, col = rainbow(13))
percentage_of_1 <- mean(Results == 1) * 100
percentage_of_1 <- mean(df3$Results == 1) * 100
percentage_of_1 <- mean(df3$Results == 0) * 100
percentage_of_1 <- mean(df3$Results == 1) * 100
freq_table2 <- table(df3$Map, df3$Results)
barplot(freq_table2, beside = FALSE, legend = TRUE, col = rainbow)
barplot(freq_table2, beside = FALSE, legend = TRUE)
freq_table2 <- table(df3$Map, df3$Results)
barplot(freq_table2, beside = FALSE, legend = TRUE, col = rainbow(9))
freq_table
freq_table2
View(df3)
View(df3)
freq_table3 <- table(df3$Placement, df3$Results)
freq_table3
barplot(freq_table3, beside = FALSE, legend = TRUE)
barplot(freq_table3, beside = FALSE, legend = TRUE, col = rainbow(10))
freq_table3 <- table(df3$`Average Rank of Match`, df3$Results)
freq_table3
barplot(freq_table3, beside = FALSE, legend = TRUE, col = rainbow(10))
freq_table3 <- table(df3$Placement, df3$Results)
freq_table3
barplot(freq_table3, beside = FALSE, legend = TRUE, col = rainbow(10))
freq_table4 <- table(df3$`Average Rank of Match`, df3$Results)
freq_table4
barplot(freq_table4, beside = FALSE, legend = TRUE, col = rainbow(12))
df3 <- df3[, c(df3$Results, 1:(df3$Results-1), (df3$Results+1):ncol(d3))]
df4 <- df3[, c(df3$Results, 1:(df3$Results-1), (df3$Results+1):ncol(d3))]
df <- df3[, c(response_index, 1:(response_index-1), (response_index+1):ncol(df3))]
response_index <- which(names(df3) == "Results")
df <- df3[, c(response_index, 1:(response_index-1), (response_index+1):ncol(df3))]
View(df3)
View(df3)
View(df)
View(df)
write.csv(df, file = "DD_CleanCompetitiveCareer_05_01_2023.csv", row.names = FALSE)
View(df)
View(df)
row_perc <- prop.table(freq_table, margin = 1) * 100
row1 <- row_perc[1, ]
row1 <- row_perc[1,2]
Breach <- row_perc[1,2]
Breach <- row_perc[1,2]
Brimstone <- row_perc[2,2]
Cypher  <- row_perc[3,2]
Jett   <- row_perc[4,2]
Killjoy  <- row_perc[5,2]
Neon   <- row_perc[6,2]
Omen  <- row_perc[7,2]
Raze   <- row_perc[8,2]
Reyna <- row_perc[9,2]
Sage  <- row_perc[10,2]
Skye  <- row_perc[11,2]
Sova  <- row_perc[12,2]
Viper <- row_perc[13,2]
overallwinrate <- mean(df3$Results == 1) * 100
row_perc2 <- prop.table(freq_table2, margin = 1) * 100
Ascent  <- row_perc2[1,2]
Bind   <- row_perc2[2,2]
Breeze   <- row_perc2[3,2]
Fracture <- row_perc2[4,2]
Haven  <- row_perc2[5,2]
Icebox  <- row_perc2[6,2]
Lotus  <- row_perc2[7,2]
Pearl  <- row_perc2[8,2]
Split  <- row_perc2[9,2]
row_perc3 <- prop.table(freq_table3, margin = 1) * 100
Placement1  <- row_perc3[1,2]
Placement2   <- row_perc3[2,2]
Placement3   <- row_perc3[3,2]
Placement4 <- row_perc3[4,2]
Placement5  <- row_perc3[5,2]
Placement6  <- row_perc3[6,2]
Placement7  <- row_perc3[7,2]
Placement8   <- row_perc3[8,2]
Placement9   <- row_perc3[9,2]
Placement10  <- row_perc3[10,2]
row_perc4 <- prop.table(freq_table4, margin = 1) * 100
BronzeI  <- row_perc4[1,2]
BronzeII   <- row_perc4[2,2]
BronzeIII <- row_perc4[3,2]
GoldI   <- row_perc4[4,2]
GoldII   <- row_perc4[5,2]
GoldIII    <- row_perc4[6,2]
PlatinumI  <- row_perc4[7,2]
PlatinumII   <- row_perc4[8,2]
PlatinumIII <- row_perc4[9,2]
SilverI <- row_perc4[10,2]
SilverII   <- row_perc4[11,2]
SilverIII  <- row_perc4[12,2]
df3$Agent[df3$Agent == "Breach"] <- Breach
View(df3)
View(df3)
df3$Agent[df3$Agent == "Brimstone"] <- Brimstone
df3$Agent[df3$Agent == "Breach"] <- Breach
df3$Agent[df3$Agent == "Brimstone"] <- Brimstone
df3$Agent[df3$Agent == "Cypher"] <- Cypher
df3$Agent[df3$Agent == "Jett"] <- Jett
df3$Agent[df3$Agent == "Killjoy"] <- Killjoy
df3$Agent[df3$Agent == "Neon"] <- Neon
df3$Agent[df3$Agent == "Omen"] <- Omen
df3$Agent[df3$Agent == "Raze"] <- Raze
df3$Agent[df3$Agent == "Reyna"] <- Reyna
df3$Agent[df3$Agent == "Sage"] <- Sage
df3$Agent[df3$Agent == "Skye"] <- Skye
df3$Agent[df3$Agent == "Sova"] <- Sova
df3$Agent[df3$Agent == "Viper"] <- Viper
df$`Average Rank of Match`[df$`Average Rank of Match` == "Bronze I"] <- Bronze I
library(readxl)
library(easypackages)
library(dplyr)
library(olsrr)
library(caret)
library(leaps)
library(MASS)
library(tidyverse)
library(car)
libraries("ggplot2","MASS","aod","ResourceSelection")
df1 <- read_excel("DD_CompetitiveCareer_02_25_2023.xlsx")
str(df1)
df2 <- df1[, -c(1,5,10,11)]
df2$Results[df2$Results == "W"] <- 1
df2$Results[df2$Results == "L"] <- 0
df2$Results[df2$Results == "D"] <- ""
df2$Agent[df2$Agent == "sage"] <- "Sage"
df2$Agent[df2$Agent == "reyna"] <- "Reyna"
df2$Agent[df2$Agent == "brimstone"] <- "Brimstone"
df2
df2[df2 == ""] <- NA
df3 <- df2[complete.cases(df2), ]
str(df3)
response_index <- which(names(df3) == "Results")
df <- df3[, c(response_index, 1:(response_index-1), (response_index+1):ncol(df3))]
logmodel <- glm(as.factor(Results) ~ ., data = df, family = "binomial")
stepboth.model <- stepAIC(logmodel, direction = "both",
trace = FALSE)
summary(stepboth.model)
View(df)
#barplot(df3$Results, names.arg = df3$Agent, main = "Bar Plot", xlab = "Agent", ylab = "Results")
freq_table <- table(df$Agent, df$Results)
freq_table
row_perc <- prop.table(freq_table, margin = 1) * 100
Breach <- row_perc[1,2]
Brimstone <- row_perc[2,2]
Cypher  <- row_perc[3,2]
Jett   <- row_perc[4,2]
Killjoy  <- row_perc[5,2]
Neon   <- row_perc[6,2]
Omen  <- row_perc[7,2]
Raze   <- row_perc[8,2]
Reyna <- row_perc[9,2]
Sage  <- row_perc[10,2]
Skye  <- row_perc[11,2]
Sova  <- row_perc[12,2]
Viper <- row_perc[13,2]
barplot(freq_table, beside = FALSE, legend = TRUE, col = rainbow(13))
freq_table2 <- table(df$Map, df$Results)
freq_table2
row_perc2 <- prop.table(freq_table2, margin = 1) * 100
Ascent  <- row_perc2[1,2]
Bind   <- row_perc2[2,2]
Breeze   <- row_perc2[3,2]
Fracture <- row_perc2[4,2]
Haven  <- row_perc2[5,2]
Icebox  <- row_perc2[6,2]
Lotus  <- row_perc2[7,2]
Pearl  <- row_perc2[8,2]
Split  <- row_perc2[9,2]
barplot(freq_table2, beside = FALSE, legend = TRUE, col = rainbow(9))
freq_table3 <- table(df$Placement, df$Results)
freq_table3
row_perc3 <- prop.table(freq_table3, margin = 1) * 100
Placement1  <- row_perc3[1,2]
Placement2   <- row_perc3[2,2]
Placement3   <- row_perc3[3,2]
Placement4 <- row_perc3[4,2]
Placement5  <- row_perc3[5,2]
Placement6  <- row_perc3[6,2]
Placement7  <- row_perc3[7,2]
Placement8   <- row_perc3[8,2]
Placement9   <- row_perc3[9,2]
Placement10  <- row_perc3[10,2]
barplot(freq_table3, beside = FALSE, legend = TRUE, col = rainbow(10))
freq_table4 <- table(df$`Average Rank of Match`, df$Results)
freq_table4
row_perc4 <- prop.table(freq_table4, margin = 1) * 100
BronzeI  <- row_perc4[1,2]
BronzeII   <- row_perc4[2,2]
BronzeIII <- row_perc4[3,2]
GoldI   <- row_perc4[4,2]
GoldII   <- row_perc4[5,2]
GoldIII    <- row_perc4[6,2]
PlatinumI  <- row_perc4[7,2]
PlatinumII   <- row_perc4[8,2]
PlatinumIII <- row_perc4[9,2]
SilverI <- row_perc4[10,2]
SilverII   <- row_perc4[11,2]
SilverIII  <- row_perc4[12,2]
barplot(freq_table4, beside = FALSE, legend = TRUE, col = rainbow(12))
overallwinrate <- mean(df$Results == 1) * 100
df$Agent[df$Agent == "Breach"] <- Breach
df$Agent[df$Agent == "Brimstone"] <- Brimstone
df$Agent[df$Agent == "Cypher"] <- Cypher
df$Agent[df$Agent == "Jett"] <- Jett
df$Agent[df$Agent == "Killjoy"] <- Killjoy
df$Agent[df$Agent == "Neon"] <- Neon
df$Agent[df$Agent == "Omen"] <- Omen
df$Agent[df$Agent == "Raze"] <- Raze
df$Agent[df$Agent == "Reyna"] <- Reyna
df$Agent[df$Agent == "Sage"] <- Sage
df$Agent[df$Agent == "Skye"] <- Skye
df$Agent[df$Agent == "Sova"] <- Sova
df$Agent[df$Agent == "Viper"] <- Viper
df$Map[df$Map == "Ascent"] <- Ascent
df$Map[df$Map == "Bind"] <- Bind
df$Map[df$Map == "Breeze"] <- Breeze
df$Map[df$Map == "Fracture"] <- Fracture
df$Map[df$Map == "Haven"] <- Haven
df$Map[df$Map == "Icebox"] <- Icebox
df$Map[df$Map == "Lotus"] <- Lotus
df$Map[df$Map == "Pearl"] <- Pearl
df$Map[df$Map == "Split"] <- Split
df$Placement[df$Placement == "1"] <- Placement1
df$Placement[df$Placement == "2"] <- Placement2
df$Placement[df$Placement == "3"] <- Placement3
df$Placement[df$Placement == "4"] <- Placement4
df$Placement[df$Placement == "5"] <- Placement5
df$Placement[df$Placement == "6"] <- Placement6
df$Placement[df$Placement == "7"] <- Placement7
df$Placement[df$Placement == "8"] <- Placement8
df$Placement[df$Placement == "9"] <- Placement9
df$Placement[df$Placement == "10"] <- Placement10
df$`Average Rank of Match`[df$`Average Rank of Match` == "Bronze I"] <- BronzeI
df$`Average Rank of Match`[df$`Average Rank of Match` == "Bronze II"] <- BronzeII
df$`Average Rank of Match`[df$`Average Rank of Match` == "Bronze III"] <- BronzeIII
df$`Average Rank of Match`[df$`Average Rank of Match` == "Gold I"] <- GoldI
df$`Average Rank of Match`[df$`Average Rank of Match` == "Gold II"] <- GoldII
df$`Average Rank of Match`[df$`Average Rank of Match` == "Gold III"] <- GoldIII
df$`Average Rank of Match`[df$`Average Rank of Match` == "Platinum I"] <- PlatinumI
df$`Average Rank of Match`[df$`Average Rank of Match` == "Platinum II"] <- PlatinumII
df$`Average Rank of Match`[df$`Average Rank of Match` == "Platinum III"] <- PlatinumIII
df$`Average Rank of Match`[df$`Average Rank of Match` == "Silver I"] <- SilverI
df$`Average Rank of Match`[df$`Average Rank of Match` == "Silver II"] <- SilverII
df$`Average Rank of Match`[df$`Average Rank of Match` == "Silver III"] <- SilverIII
View(df)
write.csv(df, file = "DD_CleanCompetitiveCareer_05_01_2023.csv", row.names = FALSE)
logmodel <- glm(as.factor(Results) ~ ., data = df, family = "binomial")
logmodel <- glm(as.factor(Results) ~ ., data = df, family = "binomial")
stepboth.model <- stepAIC(logmodel, direction = "both",
trace = FALSE)
summary(stepboth.model)
str(df)
cols_to_convert <- names(df)[-1]
df[, cols_to_convert] <- lapply(df[, cols_to_convert], as.numeric)
str(df)
write.csv(df, file = "DD_CleanCompetitiveCareer_05_01_2023.csv", row.names = FALSE)
logmodel <- glm(as.factor(Results) ~ ., data = df, family = "binomial")
stepboth.model <- stepAIC(logmodel, direction = "both",
trace = FALSE)
summary(stepboth.model)
summary(logmodel)
